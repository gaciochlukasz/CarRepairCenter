// <auto-generated />
using System;
using Api.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190505214154_active_person")]
    partial class active_person
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Repository.Models.Cars", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOwner");

                    b.Property<string>("CarBrand");

                    b.Property<string>("CarName");

                    b.Property<int>("CarType");

                    b.Property<string>("CarWeight");

                    b.Property<long>("ClientId");

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("EngineCapacity");

                    b.Property<string>("EnginePower");

                    b.Property<string>("FirstRegisterDate");

                    b.Property<int>("FuelType");

                    b.Property<long?>("GarageContextId");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<string>("NameOwner");

                    b.Property<string>("PeselOrRegonOwner");

                    b.Property<string>("RegistrationNo");

                    b.Property<string>("VinNo");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Api.Repository.Models.Clients", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthDay");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("FlatNo");

                    b.Property<long?>("GarageContextId");

                    b.Property<string>("HouseNo");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<string>("Pesel");

                    b.Property<string>("Phone");

                    b.Property<string>("PostCode");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Api.Repository.Models.Garage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<long?>("GarageContextId");

                    b.Property<Guid>("GarageGuid");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Nip");

                    b.Property<string>("Nr");

                    b.Property<string>("Phone");

                    b.Property<string>("Regon");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Garages");
                });

            modelBuilder.Entity("Api.Repository.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<long?>("GarageContextId");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("PersonType");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Api.Repository.Models.ServiceList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<bool>("Done");

                    b.Property<long?>("GarageContextId");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<string>("PartsPrice");

                    b.Property<string>("Service");

                    b.Property<string>("ServicePrice");

                    b.Property<long>("VisitRepairId");

                    b.HasKey("Id");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("VisitRepairId");

                    b.ToTable("ServiceList");
                });

            modelBuilder.Entity("Api.Repository.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<long?>("GarageContextId");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<long>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Api.Repository.Models.VisitCarCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcceptanceDate");

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("EstimateCost");

                    b.Property<string>("ExternalConditionDescription");

                    b.Property<string>("FaultDescription");

                    b.Property<long?>("GarageContextId");

                    b.Property<bool>("KeyLeft");

                    b.Property<string>("Mileage");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<bool>("OCDocument");

                    b.Property<DateTime>("ReceiptDate");

                    b.Property<bool>("RegistrationDocument");

                    b.Property<bool>("TestDriveConsent");

                    b.Property<bool>("UsedPatrsReturn");

                    b.Property<string>("Valuables");

                    b.HasKey("Id");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("VisitCarCard");
                });

            modelBuilder.Entity("Api.Repository.Models.VisitRepair", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CarId");

                    b.Property<long>("ClientId");

                    b.Property<DateTime?>("Created");

                    b.Property<long?>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<long?>("GarageContextId");

                    b.Property<DateTime?>("Modified");

                    b.Property<long?>("ModifiedBy");

                    b.Property<int>("Status");

                    b.Property<long>("VisitCarCardId");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.HasIndex("GarageContextId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("VisitCarCardId");

                    b.ToTable("VisitRepair");
                });

            modelBuilder.Entity("Api.Repository.Models.Cars", b =>
                {
                    b.HasOne("Api.Repository.Models.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Repository.Models.ServiceList", b =>
                {
                    b.HasOne("Api.Repository.Models.VisitRepair")
                        .WithMany("Services")
                        .HasForeignKey("VisitRepairId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Repository.Models.User", b =>
                {
                    b.HasOne("Api.Repository.Models.Person")
                        .WithOne("User")
                        .HasForeignKey("Api.Repository.Models.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Repository.Models.VisitRepair", b =>
                {
                    b.HasOne("Api.Repository.Models.Cars", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Repository.Models.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Repository.Models.VisitCarCard", "VisitCarCard")
                        .WithMany()
                        .HasForeignKey("VisitCarCardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
